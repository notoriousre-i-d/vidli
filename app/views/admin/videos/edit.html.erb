<h1>Editing Video</h1>

<%= render 'form' %>

<div class="field">
  <script type="text/javascript">
  var uploadStarted = false;
  window.onbeforeunload = function() { 
    if (uploadStarted) {
      return 'You have an upload in progress.\nIf you navigate away from this page you will loose your upload!';
    }
  }
  
  var myQueue = null;
  
  var queueChangeHandler = function(queue){
  	// alert('Uploading Started');
  	myQueue = queue;
  	console.log("COLLECTION CHANGE!");
  	// Add the new
  	for (i = 0; i < queue.files.length; i++) {
  	  $('#upload_file').html(queue.files[i].name);
  	  $('#StartButton').show();
//  		addFileToTodoList(queue.files[i].name, queue.files[i].size, i);
  	}
  };
  
  var uploadingStartHandler = function(){
    uploadStarted = true;
  };
  
  var progressHandler = function(progress_event){
    var current_percentage = Math.floor((parseInt(progress_event.bytesLoaded)/parseInt(progress_event.bytesTotal))*100)+'%';
    $('#upload_progress').html(current_percentage);
  };
  
  var queueReset = function() {
	  $('#StartButton').hide();
    $('#upload_file').empty();
    $('#upload_progress').empty();
    s3_swf_1_object.clearQueue();
  };
  
  var queueUpload = function() {
    s3_swf_1_object.startUploading();
    $('#StartButton').hide();
    $('#ResetButton').hide();
  };
  
  var uploadCompleteHandler = function(upload_options,event,video_id) {
    uploadStarted = false;
    var file_name = upload_options.FileName;
    console.log('Finished uploading... ' + file_name);
    // update the video with the new video path
    $.ajax({
      type: 'POST',
      url: '/admin/videos/' + video_id + '/update_s3_path',
      data: {file_name: file_name},
      success: function() {
        console.log('succesfully updated video');
      },
      dataType: 'json'
    });
  };
  
  var readableBytes = function(bytes) {
    var s = ['bytes', 'kb', 'MB', 'GB', 'TB', 'PB'];
    var e = Math.floor(Math.log(bytes)/Math.log(1024));
    return (bytes/Math.pow(1024, Math.floor(e))).toFixed(2)+" "+s[e];
  }
  </script>
  <% if !@video.s3_path %>
  <%= raw s3_swf_upload_tag(
    :fileTypes => '*.mp4;*.mov;*.f4v',
    :onQueueChange => "queueChangeHandler(queue);",
    :onQueueSizeLimitReached => "alert('Please clear the selected file first');",
    :onSignatureIOError => "alert('There was an error');",
    :onSignatureXMLError => "alert('There was an error');",
    :onSignatureSecurityError => "alert('There was an error');",
    :onUploadIOError => "alert('There was an error');",
    :onUploadError => "alert('There was an error');",
    :queueSizeLimit => 1,
    :onUploadProgress => "progressHandler(progress_event);",
    :onUploadComplete => "uploadCompleteHandler(upload_options,event,#{@video.id});",
    :onUploadingStart => "uploadingStartHandler();"
  ) %>
  <div id="upload_file"></div>
  <div id="upload_queue_size"></div>
  <div id="upload_progress"></div>
	<input type="submit" id="StartButton" value="Start Uploading" onclick="queueUpload();" style="display: none;"/>
	<input type="submit" id="ResetButton" value="Clear" onclick="queueReset();" />
	<% else %>
	<%= @video.s3_url %><%= link_to 'Delete', delete_s3_asset_admin_video_path(@video) %>
	<% end %>
</div>


<%= link_to 'Show', [:admin, @video] %> |
<%= link_to 'Back', admin_videos_path %>
